# Copyright (c) 2017 ~ 2030, the original author wangl.sir individual Inc,
# All rights reserved. Contact us wanglsir<wangl@gmail.com, 983708408@qq.com>
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
global: 
  resolve_timeout: 5m
  smtp_smarthost: 'smtp.163.com:465'
  smtp_from: 'xxx@163.com'
  smtp_auth_username: 'xxx@163.com'
  smtp_auth_password: 'xxx'
  smtp_require_tls: false # see: smtp 454 Command not permitted when TLS active
  wechat_api_url: 'https://qyapi.weixin.qq.com/cgi-bin/'

templates:
  - 'template/*.tpl'

route:
  # Alarm grouping
  group_by: ['alertname']
  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 10s
  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 30s
  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 30m
  # The default receiver.
  receiver: 'slackSender_0'
  # All the above attributes are inherited by all child routes and can
  # overwritten on each.
  routes:
    - receiver: "emailSender_0"
      group_wait: 10s
      match_re:
        severity: critical|warning
      continue: true

receivers:
  - name: "slackSender_0"
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/xx/xx/xxxx'
        send_resolved: true
        channel: 'monitoring'
        text: "{{ range .Alerts }}<!channel> {{ .Annotations.summary }}\n{{ .Annotations.description }}\n{{ end }}"

  - name: 'emailSender_0'
    email_configs:
      - to: 'xxx@163.com'
        html: '{{ template "email.html" . }}'
        headers: { Subject: "[WARN] Prometheus Alerts"}

  - name: 'dingtalkSender_0'
    webhook_configs:
      - url: 'http://localhost:8060/dingtalk/ops/send'
        send_resolved: true

  - name: 'wechatSender_0'
    wechat_configs:
      - send_resolved: true
        corp_id: '******' # 企业信息(我的企业->CorpId[在底部])
        api_secret: '******' # 企业微信(企业微信->自定应用->Secret)
        agent_id: '1000002' # 企业微信->自定应用->AgentId
        to_party: '1' # group ID
        message: '{{ template "test_wechat.html" . }}'

# Silence inhibit configuration.
inhibit_rules:
  - source_match: # 当源tag警报时触发抑制含有目标tag的警报，在当前警报匹配 status='High'
      severity: 'critical'
      status: 'High'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']
